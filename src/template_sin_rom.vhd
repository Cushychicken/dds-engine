---------------------------------------------------------------------------
-- File name   : sin_rom.vhd
--
-- Project     : cushychicken/dds-engine
--
-- Description : ROM containing a quarter of a sine wave (0 < n < (pi/2))
--
-- Author(s)   : Nash Reilly (cushychicken@gmail.com)
--
-- Date        : August 13, 2021
--
-- Note(s)     : Sine coefficients generated by a helper script
--
----------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  use ieee.std_logic_unsigned.all;
  use ieee.std_logic_arith.all;

entity sin_rom is
  port (
    clock : in    std_logic;
    addr  : in    std_logic_vector(13 downto 0);
    data  : out   std_logic_vector(11 downto 0)
  );
end entity sin_rom;

architecture sin_rom_arch of sin_rom is

  -- Signals and constants here

  type rom_type is array (0 to 1023) of std_logic_vector(11 downto 0);

  constant rom : rom_type :=
  (
    -- Everything between these two comments is generated by Python
    {sintable}
    -- End Python generated section
  );

begin

  memory : process (clock) is
  begin
    
	if (clock'event and clock='1') then
      if (addr(13 downto 4) >= 0 and addr(13 downto 4) <= 1023) then
		-- 0 < n < pi/2
		if (addr(13 downto 12) = "00") then
          data <= rom(conv_integer(addr(13 downto 4)));
		-- pi/2 < n < pi
		elsif (addr(13 downto 12) = "01") then
          data <= rom(2047 - conv_integer(addr(13 downto 4)));
		-- pi < n < (3*pi)/2
		elsif (addr(13 downto 12) = "10") then
          data <= std_logic_vector(not rom(conv_integer(addr(13 downto 4))-2048) + 1);
		-- (3*pi)/2 < n < 2*pi
		elsif (addr(13 downto 12) = "11") then
          data <= std_logic_vector(not rom(4195 - conv_integer(addr(13 downto 4))) + 1);
		end if;
      end if;
    end if;

  end process memory;

end architecture sin_rom_arch;
